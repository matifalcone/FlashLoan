import { Contracts } from '../modules/Contracts';
import { BaseValue, BigNumberable, CallOptions, FundingRate, FundingRateBounds, SendOptions, TxResult, address } from '../lib/types';
export declare class FundingOracle {
    private contracts;
    constructor(contracts: Contracts);
    get address(): string;
    getBounds(options?: CallOptions): Promise<FundingRateBounds>;
    getFunding(timeDelta: BigNumberable, options?: CallOptions): Promise<BaseValue>;
    getFundingRate(options?: CallOptions): Promise<FundingRate>;
    getFundingRateProvider(options?: CallOptions): Promise<address>;
    /**
     * Simulates the result of calling setFundingRate() using `eth_call`.
     */
    getBoundedFundingRate(fundingRate: FundingRate, options?: CallOptions): Promise<FundingRate>;
    /**
     * Set the funding rate.
     *
     * Must be called by the funding rate provider.
     */
    setFundingRate(fundingRate: FundingRate, options?: SendOptions): Promise<TxResult>;
    /**
     * Set the funding rate provider.
     *
     * Must be called by the contract owner.
     */
    setFundingRateProvider(fundingRateProvider: address, options?: SendOptions): Promise<TxResult>;
}
