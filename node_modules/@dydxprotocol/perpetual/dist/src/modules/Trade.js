"use strict";
/*

    Copyright 2020 dYdX Trading Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __importDefault(require("lodash"));
var TradeOperation_1 = require("./TradeOperation");
var Trade = /** @class */ (function () {
    function Trade(contracts, orders) {
        this.contracts = contracts;
        this.orders = orders;
    }
    // ============ Public Functions ============
    Trade.prototype.initiate = function () {
        return new TradeOperation_1.TradeOperation(this.contracts, this.orders);
    };
    // ============ Solidity Functions ============
    Trade.prototype.trade = function (accounts, tradeArgs, options) {
        return __awaiter(this, void 0, void 0, function () {
            var tradeArgs_1, tradeArgs_1_1, _a, makerIndex, takerIndex;
            var e_1, _b;
            return __generator(this, function (_c) {
                if (!lodash_1.default.isEqual(accounts, lodash_1.default.chain(accounts).map(lodash_1.default.toLower).sort().sortedUniq().value())) {
                    throw new Error('Accounts passed to trade() should be lowercase, unique, and sorted; got: '
                        + ("" + JSON.stringify(accounts)));
                }
                try {
                    for (tradeArgs_1 = __values(tradeArgs), tradeArgs_1_1 = tradeArgs_1.next(); !tradeArgs_1_1.done; tradeArgs_1_1 = tradeArgs_1.next()) {
                        _a = tradeArgs_1_1.value, makerIndex = _a.makerIndex, takerIndex = _a.takerIndex;
                        if (makerIndex < 0 || makerIndex >= accounts.length) {
                            throw new Error("Trade arg maker index out of bounds: " + makerIndex);
                        }
                        if (takerIndex < 0 || takerIndex >= accounts.length) {
                            throw new Error("Trade arg taker index out of bounds: " + takerIndex);
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (tradeArgs_1_1 && !tradeArgs_1_1.done && (_b = tradeArgs_1.return)) _b.call(tradeArgs_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                return [2 /*return*/, this.contracts.send(this.contracts.perpetualV1.methods.trade(accounts, tradeArgs), options)];
            });
        });
    };
    return Trade;
}());
exports.Trade = Trade;
//# sourceMappingURL=Trade.js.map