"use strict";
/*

    Copyright 2020 dYdX Trading Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var BytesHelper_1 = require("../lib/BytesHelper");
var Constants_1 = require("../lib/Constants");
function makeDeleverageTradeData(amount, isBuy, allOrNothing) {
    var amountData = BytesHelper_1.bnToBytes32(amount);
    var isBuyData = BytesHelper_1.boolToBytes32(isBuy);
    var allOrNothingData = BytesHelper_1.boolToBytes32(allOrNothing);
    return BytesHelper_1.combineHexStrings(amountData, isBuyData, allOrNothingData);
}
exports.makeDeleverageTradeData = makeDeleverageTradeData;
var Deleveraging = /** @class */ (function () {
    function Deleveraging(contracts) {
        this.contracts = contracts;
        this.deleveraging = this.contracts.p1Deleveraging;
    }
    Object.defineProperty(Deleveraging.prototype, "address", {
        get: function () {
            return this.deleveraging.options.address;
        },
        enumerable: true,
        configurable: true
    });
    Deleveraging.prototype.trade = function (maker, taker, price, amount, isBuy, allOrNothing, traderFlags, options) {
        if (allOrNothing === void 0) { allOrNothing = false; }
        if (traderFlags === void 0) { traderFlags = Constants_1.INTEGERS.ZERO; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.contracts.call(this.deleveraging.methods.trade(Constants_1.ADDRESSES.ZERO, // sender (unused)
                    maker, taker, price.toSolidity(), makeDeleverageTradeData(amount, isBuy, allOrNothing), BytesHelper_1.bnToBytes32(traderFlags)), options)];
            });
        });
    };
    Deleveraging.prototype.mark = function (account, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.contracts.send(this.deleveraging.methods.mark(account), options)];
            });
        });
    };
    Deleveraging.prototype.unmark = function (account, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.contracts.send(this.deleveraging.methods.unmark(account), options)];
            });
        });
    };
    Deleveraging.prototype.getDeleveragingTimelockSeconds = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var timelockSeconds;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contracts.call(this.deleveraging.methods.DELEVERAGING_TIMELOCK_S(), options)];
                    case 1:
                        timelockSeconds = _a.sent();
                        return [2 /*return*/, Number.parseInt(timelockSeconds, 10)];
                }
            });
        });
    };
    return Deleveraging;
}());
exports.Deleveraging = Deleveraging;
//# sourceMappingURL=Deleveraging.js.map