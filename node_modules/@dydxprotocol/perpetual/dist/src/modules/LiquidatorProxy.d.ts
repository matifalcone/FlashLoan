import BigNumber from 'bignumber.js';
import { Contracts } from './Contracts';
import { BigNumberable, BaseValue, TxResult, CallOptions, SendOptions, address } from '../lib/types';
export declare class LiquidatorProxy {
    private contracts;
    private proxy;
    constructor(contracts: Contracts);
    get address(): string;
    getInsuranceFund(options?: CallOptions): Promise<address>;
    getInsuranceFee(options?: CallOptions): Promise<BaseValue>;
    getLiquidateReturnValue(liquidatee: address, isBuy: boolean, maxPosition: BigNumberable, options?: CallOptions): Promise<BigNumber>;
    approveMaximumOnPerpetual(options?: SendOptions): Promise<TxResult>;
    liquidate(liquidatee: address, isBuy: boolean, maxPosition: BigNumberable, options?: SendOptions): Promise<TxResult>;
    setInsuranceFund(insuranceFund: address, options?: SendOptions): Promise<TxResult>;
    setInsuranceFee(insuranceFee: BaseValue, options?: SendOptions): Promise<TxResult>;
}
